@import '_variables';

@mixin reset {
  html,
  body {
    border: 0;
    padding: 0;
    margin: 0;
    height: 100%;
    width: 100%;
  }
}


@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

/*
Usage
.sidebar {
  width: 60%;
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}
Output
.sidebar {
  width: 60%;
  float: left;
  margin: 0 2% 0 0;
  @media only screen and (max-width: 30){
    .sidebar{width: 100%; float: none; margin: 0;}
  }
}
*/

/*pattern.svg
pattern.png
pattern@2x.png*/

@mixin background-image($name, $size:false, $repeat: false, $position: false){
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size) {
    background-size: $size;
  }
  @if($repeat) {
    background-repeat: $repeat;
  }
  @if($position) {
    background-position: $position;
  }
  .no-svg &{
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}
/*
Usage
body {
  @include background-image('pattern');
}
*/

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}



@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}
/*
Usage
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}

.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/


@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin border($type: solid, $thickness: 1px, $color: #000) {
  -moz-border: $type $thickness $color;
  -webkit-border: $type $thickness $color;
  -ms-border: $type $thickness $color;
  border: $type $thickness $color;
}

%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*
Usage
.container-with-floated-children {
  @extend %clearfix;
}
*/
@mixin no_select {
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

@mixin background_bevel_corner($color: #000, $size: 50px, $corner_1: 30deg, $corner_2: 150deg, $corner_3: 210deg, $corner_4: 330deg) {
  background: $color; /* default color */
  background: -moz-linear-gradient($corner_1, transparent $size, $color $size),
              -moz-linear-gradient($corner_2, transparent $size, $color $size),
              -moz-linear-gradient($corner_3, transparent $size, $color $size),
              -moz-linear-gradient($corner_4, transparent $size, $color $size);
  background: -o-linear-gradient($corner_1, transparent $size, $color $size),
              -o-linear-gradient($corner_2, transparent $size, $color $size),
              -o-linear-gradient($corner_3, transparent $size, $color $size),
              -o-linear-gradient($corner_4, transparent $size, $color $size);
  background: -webkit-linear-gradient($corner_1, transparent $size, $color $size),
              -webkit-linear-gradient($corner_2, transparent $size, $color $size),
              -webkit-linear-gradient($corner_3, transparent $size, $color $size),
              -webkit-linear-gradient($corner_4, transparent $size, $color $size);
  background-position: bottom left, bottom right, top right, top left;
  -moz-background-size: 51% 51%;
  -webkit-background-size: 51% 51%;
  background-size: 51% 51%;
  background-repeat: no-repeat;
}

@mixin hexagon($color: #000, $size: 90px, $border_size: false) {
  $width: $size * 2;
  $height: $size * 1.75;
  $size: $height / 4;
  $bborder: $height / 2 + 1;
  $border: $height / 2 + 1;
  @if ($border_size != false) {
    $bborder: $border_size;
    $border: $size + $border_size;
  }
  $corner_1: 30deg;
  $top: 270deg;
  $corner_2: 150deg;
  $corner_3: 210deg;
  $bottom: 90deg;
  $corner_4: 330deg;
  width: $width;
  height: $height;
  background: $color; /* default color */
  background: -moz-linear-gradient($corner_1, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($corner_4, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -moz-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background: -o-linear-gradient($corner_1, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($corner_4, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -o-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background: -webkit-linear-gradient($corner_1, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($corner_4, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -webkit-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background-position: bottom left, bottom right, top right, top left, top center, bottom center;
  -moz-background-size: 51% 51%;
  -webkit-background-size: 51% 51%;
  background-size: 51% 51%;
  background-repeat: no-repeat;
}

@mixin half_hexagon($color: #000, $size: 90px, $border_size: 0px, $clip: 0px) {
  $width: $size - $clip;
  $height: $size * 1.75;
  $left: -$size / 9 - 2;
  $size: $height / 4;
  $bborder: $height / 4 + 1;
  $border: $height / 2 + 2;
  @if ($border_size != 0px) {
    $bborder: $border_size;
    $border: $size + $border_size;
  }
  $corner_1: 0deg;
  $top: 270deg;
  $corner_2: 150deg;
  $corner_3: 210deg;
  $bottom: 90deg;
  $corner_4: 0deg;
  width: $width;
  height: $height;
  background: $color; /* default color */
  background: -moz-linear-gradient($corner_1, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -moz-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -moz-linear-gradient($corner_4, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -moz-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -moz-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background: -o-linear-gradient($corner_1, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -o-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -o-linear-gradient($corner_4, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -o-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -o-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background: -webkit-linear-gradient($corner_1, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -webkit-linear-gradient($corner_2, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($corner_3, transparent $size, $color $size, $color $border, transparent $border),
              -webkit-linear-gradient($corner_4, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -webkit-linear-gradient($top, transparent 0px, $color 0px, $color $bborder, transparent $bborder),
              -webkit-linear-gradient($bottom, transparent 0px, $color 0px, $color $bborder, transparent $bborder);
  background-position: bottom left, bottom right, top right, top left, top left $left, bottom left $left;
  -moz-background-size: 51% 51%;
  -webkit-background-size: 51% 51%;
  background-size: 60% 51%;
  background-repeat: no-repeat;
}

@mixin rotate($degree) {
  -ms-transform: rotate($degree);
  -moz-transform: rotate($degree);
  -o-transform: rotate($degree);
  -webkit-transform: rotate($degree);
  transform: rotate($degree);
}